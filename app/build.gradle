apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'deploygate'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "sh.nothing.getzerodigit"
        versionCode 1
        versionName "1.0"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }
    signingConfigs {
        debug {
            storeFile file("../debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        if (project.hasProperty("RELEASE_KEYSTORE")) {
            release {
                storeFile file(RELEASE_KEYSTORE)
                storePassword RELEASE_KEYSTORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (project.hasProperty("RELEASE_KEYSTORE")) {
                signingConfig signingConfigs.release
            }
        }
        debug {
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.deploygate:sdk:3.1'
}

if (project.hasProperty("DEPLOYGATE_USER_NAME")) {
    deploygate {
        userName = DEPLOYGATE_USER_NAME
        token = DEPLOYGATE_API_TOKEN

        apks {
            debug {
                sourceFile = file("build/outputs/apk/app-debug.apk")
                if (project.hasProperty("BUILD_MESSAGE")) {
                    message = BUILD_MESSAGE
                }
            }
            release {
                sourceFile = file("build/outputs/apk/app-release.apk")
                if (project.hasProperty("BUILD_MESSAGE")) {
                    message = BUILD_MESSAGE
                }
            }
        }
    }
}